FORMAT: 1A9
HOST: http://api.cnanational.com/v1

# Dealer Portal Web Services API

GAP Claims have increased over time without any improvements to the systems and processes, 
increasing call wait times as well as how long it takes to process a waiver. This prompted 
a Business Process Review, identifying several changes to address issues impacting customer 
service.

This document defines all the web services contracts related to the Dealer Portal Application.

Note that the `Correlation-Id` request header is a UUID string that must be generated and sent
from the requestor (web service client).  This string is used to trace requests through each
related web service for a single request.

The `REQUESTOR_APP` header is also used for logging and tracing purposes, and identifies the
application that made the original request.

## Group Profiles

### User Profile [/profile]
This service returns the user profile data. The service is going to use the OAM/WebGate current user
header to get the current user profile.

The main use for this service is to identify the role(s) of the current user on the first page. 
If the user is a dealer, we are going to skip this fisrt page and we are going to redirect
the user to the gap claim list.

The `partyType` field should be used to determine what the user type is.  The `partyId` field
represents the current dealer or agent ID, and should be used when making requests to services
such as the Dealer Profiles service (/agents/{agentId}/dealers) below.

#### Retrieve a User Profile [GET]
+ Request (application/json)

    + Header
    
            Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l
            oam_remote_user: jdoe
            Correlation-Id: 1434383293
            REQUESTOR_APP: Dealer Portal
            Cache-Control: no-cache

+ Response 200 (application/json)

    + Attributes (userProfile)
    
    + Body
    
            {
                "id": "web_jdoe,
                "webRole": "WEB_DEALER",
                "userRoles": [ "IS Development", "Java Developer" ]
                "partyId": 235,
                "partyType": "D",
                "name": "Motor Inn Company",
                "links": {
                    "web_jdoe": [
                        {
                            "id": "198229",
                            "location": "A2",
                            "linkType": "A",
                            "label": "Web Dealer Lists Form",
                            "icon": "other.png",
                            "sortOrder": 100,
                            "status": "A",
                            "locUrl": null,
                            "appUrl": "*DealerList/faces/Login"
                        },
                        {
                            "id": "22941375",
                            "location": "A2",
                            "linkType": "R",
                            "label": "Dealership Statement",
                            "icon": "other.png",
                            "sortOrder": 600,
                            "status": "A",
                            "locUrl": null,
                            "appUrl": null
                        }
                    ]
                }
            }
            
+ Response 500 (application/json)

    + Attributes (error)
    
+ Response 403 (application/json)

    + Attributes (authError)

### Dealer Profiles [/agents/{agentId}/dealers]
This service returns a collection of dealer profiles. The service is going to use
the `oam_remote_user` header value to get the current user profile and identify if it is an agent.
If the current user profile is not an agent the service will return a `403` response code.

The main use for this service is to fill the dropdown control of the first (dealer list) page. If the
current user is an agent, this service is going to provide us all the data to fill
the control and make the agent acts as a dealer.

Here is the JSON dummy data generator: http://beta.json-generator.com/EJ5QkB7vG

+ Parameters

    + agentId (required, number, `365`) ... Profile ID of the agent. 

#### Retrieve a Dealers Profile collection [GET]
+ Request (application/json)

    + Header
    
            Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l
            oam_remote_user: jdoe
            Correlation-Id: 1434383293
            REQUESTOR_APP: Dealer Portal
            Cache-Control: no-cache

+ Response 200 (application/json)

    + Attributes (dealers) 
    
    + Body
    
            {
                "dealers": [
                  {
                    "id": 22185,
                    "name": "Rodemco"
                  },
                  {
                    "id": 27551,
                    "name": "Pivitol"
                  },
                  {
                    "id": 21016,
                    "name": "Softmicro"
                  },
                  {
                    "id": 28986,
                    "name": "Zilidium"
                  },
                  {
                    "id": 24074,
                    "name": "Avenetro"
                  },
                  {
                    "id": 27321,
                    "name": "Kenegy"
                  },
                  {
                    "id": 28032,
                    "name": "Diginetic"
                  },
                  {
                    "id": 29341,
                    "name": "Melbacor"
                  },
                  {
                    "id": 24261,
                    "name": "Envire"
                  },
                  {
                    "id": 28589,
                    "name": "Microluxe"
                  }
              ]
            }
            
+ Response 500 (application/json)

    + Attributes (error)

+ Response 403 (application/json)

    + Attributes (authError)
    
## Group Claims

### Dealer Gap Claim [/dealers/{dealerId}/claims{?product}{?status}{?contractNum}{?claimNum}{?sort}{?page}{?size}]
Return the collection of gap claims for a specific dealer.  The main use for this service 
is on the second page, to retive the collection of gap claims for a specific dealer.  
The idea is to make 2 different request to this service. The first 
one is to get all the gap claims with status `P`. The second request is to get all the gap
claims with status `O|A|B|C|D` (`C` and `D` status fall off after 90 days from this
list), or with a specific claim or contract number.

The product parameter must be specified, as well as one of status, contractNum or claimNum.
If these conditions are not met, a `400` response code will be returned.  If multiple parameters 
(e.g. status and contractNum) are provided they will be used in the following order 
(highest to lowest precedence): `claimNum`, `contractNum`, `status`.  For the purposes of the
Dealer Portal UI, the `product` value will always be `GAP`.

Sorting can be specified by the optional sort parameter.  Multiple sort criteria can be specified
by simply providing the parameter multiple times; for example:

`?sort=lastActivityDate,desc&sort=customerLastName,desc`

Pagination may be specified by using the `page` and `size` parameters.  If only `page` is specified,
a default page size of `20` will be assumed.  If only `size` is specfied, a default page of `0` will be assumed.

Here is the JSON dummy data generator: http://beta.json-generator.com/NJStEVQwz

+ Parameters

    + dealerId (required, number, `356`) ... Dealer ID of the gap claims to retrieve. 
    + status (optional, string, `O|A|B|C|D`) ... Claim status IDs of the gap claims to retrive, separated by pipe.
    + contractNum (optional, string `2245568`) ... Contract (aka addendum) number to search for.
    + claimNum (optional, string `6030834`) ... Claim number to search for.
    + product (required, string `GAP`) ... The type of product to search for.
    + sort (optional, string `lastActivityDate,desc`) ... The sorting criteria to be applied.
    + page (optional, number, `2`) ... Page to retrieve for pagination.
    + size (optional, number, `20`) ... Page size for pagination.
    
#### Retrieve a Dealer Gap Claim collection [GET]
+ Request (application/json)

    + Header
    
            Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l
            oam_remote_user: jdoe
            Correlation-Id: 1434383293
            REQUESTOR_APP: Dealer Portal

+ Response 200 (application/json)

    + Attributes (claims)
    
    + Body
    
            {
                "claims": [
                  {
                    "lastActivityDate": {
                      "Day": 15,
                      "Month": 11,
                      "Year": 2017
                    },
                    "product": "GAP",
                    "status": "C",
                    "dateClaimOpened": {
                      "Day": 30,
                      "Month": 2,
                      "Year": 2017
                    },
                    "dateLoss": {
                      "Day": 18,
                      "Month": 4,
                      "Year": 2016
                    },
                    "customerLastName": "Smith",
                    "contractNum": 2694642,
                    "claimNum": 6083767
                  },
                  {
                    "lastActivityDate": {
                      "Day": 17,
                      "Month": 2,
                      "Year": 2016
                    },
                    "product": "GAP",
                    "status": "C",
                    "dateClaimOpened": {
                      "Day": 17,
                      "Month": 9,
                      "Year": 2016
                    },
                    "dateLoss": {
                      "Day": 11,
                      "Month": 4,
                      "Year": 2016
                    },
                    "customerLastName": "Jones",
                    "contractNum": 2974788,
                    "claimNum": 6645107
                  },
                  {
                    "lastActivityDate": {
                      "Day": 27,
                      "Month": 3,
                      "Year": 2016
                    },
                    "product": "PRODUCT-X",
                    "status": "A",
                    "dateClaimOpened": {
                      "Day": 17,
                      "Month": 8,
                      "Year": 2017
                    },
                    "dateLoss": {
                      "Day": 23,
                      "Month": 2,
                      "Year": 2017
                    },
                    "customerLastName": "Ratner",
                    "contractNum": 2569447,
                    "claimNum": 6907981
                  },
                  {
                    "lastActivityDate": {
                      "Day": 24,
                      "Month": 12,
                      "Year": 2017
                    },
                    "product": "GAP",
                    "status": "D",
                    "dateClaimOpened": {
                      "Day": 4,
                      "Month": 2,
                      "Year": 2016
                    },
                    "dateLoss": {
                      "Day": 19,
                      "Month": 8,
                      "Year": 2017
                    },
                    "customerLastName": "Tolaz",
                    "contractNum": 2390787,
                    "claimNum": 6045875
                  },
                  {
                    "lastActivityDate": {
                      "Day": 16,
                      "Month": 7,
                      "Year": 2016
                    },
                    "product": "GAP",
                    "status": "V",
                    "dateClaimOpened": {
                      "Day": 6,
                      "Month": 7,
                      "Year": 2016
                    },
                    "dateLoss": {
                      "Day": 19,
                      "Month": 1,
                      "Year": 2017
                    },
                    "customerLastName": "Penham",
                    "contractNum": 2519071,
                    "claimNum": 6104059
                  },
                  {
                    "lastActivityDate": {
                      "Day": 29,
                      "Month": 5,
                      "Year": 2017
                    },
                    "product": "PRODUCT-X",
                    "status": "V",
                    "dateClaimOpened": {
                      "Day": 30,
                      "Month": 3,
                      "Year": 2017
                    },
                    "dateLoss": {
                      "Day": 9,
                      "Month": 3,
                      "Year": 2017
                    },
                    "customerLastName": "Loman",
                    "contractNum": 2631395,
                    "claimNum": 6836951
                  },
                  {
                    "lastActivityDate": {
                      "Day": 20,
                      "Month": 10,
                      "Year": 2016
                    },
                    "product": "PRODUCT-X",
                    "status": "A",
                    "dateClaimOpened": {
                      "Day": 10,
                      "Month": 2,
                      "Year": 2017
                    },
                    "dateLoss": {
                      "Day": 9,
                      "Month": 1,
                      "Year": 2017
                    },
                    "customerLastName": "Orbison",
                    "contractNum": 2036367,
                    "claimNum": 6559840
                  },
                  {
                    "lastActivityDate": {
                      "Day": 3,
                      "Month": 6,
                      "Year": 2016
                    },
                    "product": "GAP",
                    "status": "D",
                    "dateClaimOpened": {
                      "Day": 23,
                      "Month": 5,
                      "Year": 2016
                    },
                    "dateLoss": {
                      "Day": 7,
                      "Month": 8,
                      "Year": 2016
                    },
                    "customerLastName": "Page",
                    "contractNum": 2591044,
                    "claimNum": 6561904
                  },
                  {
                    "lastActivityDate": {
                      "Day": 23,
                      "Month": 1,
                      "Year": 2017
                    },
                    "product": "PRODUCT-X",
                    "status": "O",
                    "dateClaimOpened": {
                      "Day": 26,
                      "Month": 6,
                      "Year": 2016
                    },
                    "dateLoss": {
                      "Day": 12,
                      "Month": 3,
                      "Year": 2016
                    },
                    "customerLastName": "Everly",
                    "contractNum": 2148586,
                    "claimNum": 6433764
                  },
                  {
                    "lastActivityDate": {
                      "Day": 20,
                      "Month": 9,
                      "Year": 2016
                    },
                    "product": "GAP",
                    "status": "D",
                    "dateClaimOpened": {
                      "Day": 4,
                      "Month": 4,
                      "Year": 2016
                    },
                    "dateLoss": {
                      "Day": 17,
                      "Month": 7,
                      "Year": 2017
                    },
                    "customerLastName": "Topaz",
                    "contractNum": 2489447,
                    "claimNum": 6145861
                  }
              ]
            }

+ Response 500 (application/json)

    + Attributes (error)
    
+ Response 400 (application/json)

    + Attributes (error)
    
    + Body
    
            {
                "message": "At least one search parameter must be provided",
                "errorCode": "DPTL-0052"
            }
    
+ Response 403 (application/json)

    + Attributes (authError)

### Gap Claim [/claims/{claimId}]
Return a single gap claim object with all the associated documents.

The main use for this service is on the page where we have to show the details of a specific gap claim.

+ Parameters

    + claimId (required, number, `6359654`) ... Integer `claimId` of the gap claim to perform action with.

#### Retrieve a Gap Claim [GET]
+ Request (application/json)

    + Header
    
            Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l
            oam_remote_user: jdoe
            Correlation-Id: 1434383293
            REQUESTOR_APP: Dealer Portal
            
+ Response 200 (application/json)

    + Attributes (claimDetail)

    + Body
    
            {
                "claimData": {
                    "claimNum": "6359654", 
                    "contractNum": "2245568",
                    "customerLastName": "Smith",
                    "dateLoss": {"Year": 2016, "Month": 1, "Day": 10},
                    "dateClaimOpened": {"Year": 2016, "Month": 1, "Day": 15},
                    "status": "P",
                    "product": "GAP",
                    "lastActivityDate": {"Year": 2016, "Month": 1, "Day": 15}
                },
                "requiredDocs": [
                    {"id": 1, "name": "Police Report", "verifiedDate": {"Year": 2016, "Month": 1, "Day": 15}},
                    {"id": 2, "name": "Lender Payment History", "verifiedDate": {"Year": 2016, "Month": 1, "Day": 16}},
                    {"id": 3, "name": "Finance Contract", "verifiedDate": {"Year": 2016, "Month": 1, "Day": 17}}
                ],
                "additionalDocs": [
                    {"id": 4, "name": "Sales/Leasing Aggrement", "verifiedDate": {"Year": 2016, "Month": 1, "Day": 15}},
                    {"id": 5, "name": "Factory Invoice", "verifiedDate": {"Year": 2016, "Month": 1, "Day": 16}},
                    {"id": 6, "name": "Other Credits", "verifiedDate": {"Year": 2016, "Month": 1, "Day": 17}}
                ]
            }

+ Response 500 (application/json)

    + Attributes (error)


### Gap Claim Status Types [/claims/status-types]
Return a collection of the different gap claim status types.

The main use for this service to fill the legend on the page where we have
to list all the gap claims for a dealer, as well as to populate the search by status field.


#### Retrieve the Gap Claim Status collection [GET]
+ Request (application/json)

    + Header
    
            Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l
            oam_remote_user: jdoe
            Correlation-Id: 1434383293
            REQUESTOR_APP: Dealer Portal

+ Response 200 (application/json)

    + Attributes (claimStatuses)

    + Body
    
            [
                {"id": "P", "name": "Pending Documents", "description": "Documents still needed in order to process the claim"},
                {"id": "O", "name": "In Process", "description": "All documents received. Claim under Review"},
                {"id": "A", "name": "In Process", "description": "All documents received. Claim under Review"},
                {"id": "B", "name": "In Process", "description": "All documents received. Claim under Review"},
                {"id": "C", "name": "Closed", "description": ""},
                {"id": "D", "name": "Denied", "description": ""}
            ]

+ Response 500 (application/json)

    + Attributes (error)
    

# Data Structures

## date (object)
+ year (number) - Year fo the date
+ month (number) - Month of the date
+ day (number) - Day of the date

## userProfile (object)
+ id: web_jdoe (string, required) - Profile Id/username
+ webRole (string, optional) - Web role
+ userRoles (array[string], optional) - User roles
+ partyId (number, required) - Party id
+ partyType (string, required) - Party type
+ name: Motor Inn Company (string, required) - Profile name
+ links (links, optional) - Links for the user

## links (object)
+ username: web_jdoe (array[link]) - Array of links for the user

## link (object)
+ id: 198229 (number, required) - Link Id
+ location: A2 (string, required) - Location the link should be shown
+ linkType: A (string, required) - The type of link (A=application or R=report)
+ label: Web Dealer Lists Form (string, required) - The label for the link
+ icon: other.png (string, required) - The icon for the link
+ sortOrder: 100 (number, required) - The order which the link should be presented
+ status: A (string, required) - The status of the link (always A=active)
+ locUrl (string, optional) - Uknown
+ appUrl (string, optional) - The URL for an applicaton link

## dealer (object)
+ id: 365 (number, required) - Dealer Id
+ name: Motor Inn Company (string, required) - Dealer name

## dealers (object)
+ dealers (array[dealer]) - Array of dealers

## document (object)
+ id (number) - Document ID
+ name (string) - Document name
+ verifiedDate (date) - Document verification date

## documents (object)
+ documents (array[document]) - Array of documents

## claimStatus (object)
+ id: P (string) - Document ID
+ name: Pending Documents (string) - Document name
+ description: Documents still needed in order to process the claim (string) - Document description

## claimStatuses (object)
+ claimStatuses (array[claimStatus]) - Array of claim statuses

## claim (object)
+ claimNum: 6359654 (string) - Claim number
+ contractNum: 2245568 (string) - Contract (aka addendum) number
+ customerLastName: Smith (string) - Customer
+ dateLoss (date) - Date of loss
+ dateClaimOpened (date) - Date claim opened
+ status: P (string) - Claim status
+ product: GAP (string) - Product type
+ statusName: Pending Documents (string) - Claim status name
+ statusDesc: Documents still needed in order to process the claim (string) - Claim status description
+ lastActivityDate (date) - Last activity date

## claims (object)
+ claims (array[claim]) - Array of claims

## claimDetail
+ claimData (claim) - Claim information
+ requiredDocs (array[document]) - Required documents
+ additionalDocs (array[document]) - Additional documents

## error (object)
+ message: Error message (string, required) - Error message to show to the final user
+ errorCode: `DPTL-0032` (string, optional) - Optional error code

## authError (object)
+ message: `The user is not authorized` (string, required) - Error message to show to the final user
+ errorCode: `DPTL-0046` (string, optional) - Optional error code