FORMAT: 1A9
HOST: http://api.cnanational.com/v1

# Dealer Portal Web Services API

GAP Claims have increased over time without any improvements to the systems and processes, 
increasing call wait times as well as how long it takes to process a waiver. This prompted 
a Business Process Review, identifying several changes to address issues impacting customer 
service.

This document defines all the web services contracts related to the Dealer Portal Application.

## Group Profiles

### User Profile [/profile]
This service returns the user profile data. The service is going to use the OAM/WebGate current user
header to get the current user profile.

The main use for this service is to identify the role of the current user on the first page. 
If the user is a dealer, we are going to skip this fisrt page and we are going to redirect
the user to the gap claim list.

#### Retrieve a User Profile [GET]
+ Request (application/json)

    + Header
    
            Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l
            Current-User: jdoe
            Cache-Control: no-cache

+ Response 200 (application/json)

    + Attributes (profile)
    
    + Body
    
            {
                "id": 22185,
                "role": "dealer", 
                "name": "Motor Inn Company"
            }
            
+ Response 500 (application/json)

    + Attributes (error)
    
+ Response 403 (application/json)

    + Attributes (error)
    
    + Body
    
            {
                "message": "The user is not authorized"
            }

### Dealer Profile [/agent/{agentId}/dealers]
This service returns a collection of dealer profiles. The service is going to use
the Current-User header value to get the current user profile and identify if it is an agent.
If the current user profile is not an agent the service will return a 403 response code.

The main use for this service is to fill the dropdown control of the first (dealer list) page. If the
current user is an agent, this service is going to provide us all the data to fill
the control and make the agent acts as a dealer.

Here is the JSON dummy data generator: http://beta.json-generator.com/EJ5QkB7vG

+ Parameters

    + agentId (required, number, `365`) ... Profile ID of the agent. 

#### Retrieve a Dealers Profile collection [GET]
+ Request (application/json)

    + Header
    
            Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l
            Current-User: jdoe
            Cache-Control: no-cache

+ Response 200 (application/json)

    + Attributes (profiles) 
    
    + Body
    
            {
                "profiles": [
                  {
                    "id": 22185,
                    "role": "dealer",
                    "name": "Rodemco"
                  },
                  {
                    "id": 27551,
                    "role": "dealer",
                    "name": "Pivitol"
                  },
                  {
                    "id": 21016,
                    "role": "dealer",
                    "name": "Softmicro"
                  },
                  {
                    "id": 28986,
                    "role": "dealer",
                    "name": "Zilidium"
                  },
                  {
                    "id": 24074,
                    "role": "dealer",
                    "name": "Avenetro"
                  },
                  {
                    "id": 27321,
                    "role": "dealer",
                    "name": "Kenegy"
                  },
                  {
                    "id": 28032,
                    "role": "dealer",
                    "name": "Diginetic"
                  },
                  {
                    "id": 29341,
                    "role": "dealer",
                    "name": "Melbacor"
                  },
                  {
                    "id": 24261,
                    "role": "dealer",
                    "name": "Envire"
                  },
                  {
                    "id": 28589,
                    "role": "dealer",
                    "name": "Microluxe"
                  }
              ]
            }
            
+ Response 500 (application/json)

    + Attributes (error)
    
+ Response 403 (application/json)

    + Attributes (error)
    
    + Body
    
            {
                "message": "The user is not authorized"
            }
    
## Group Claims

### Dealer Gap Claim [/dealers/{dealerId}/claims{?status}{?addendumNum}{?claimNum}]
Return the collection of gap claims for a specific dealer. If the status and addendum parameters
are empty, the service is going to return a 400 (bad request) response code.

The main use for this service is on the second page, to retive the collection of gap claim 
for a specific dealer. The idea is to make 3 different request to this service. The first 
one is to get all the gap claims with status "P". The second request is to get all the gap
claims with status "O|A|B|C|D|V" ("C" and "D" status fall off after 90 days from this
list).  The last request is to get a gap claim with a specified addendum number.

The service only supports one search parameter at a time.  If multiple parameters are provided they
will be used in the following order (highest to lowest precedence): claim number, addendum number, status.

Here is the JSON dummy data generator: http://beta.json-generator.com/NJStEVQwz

+ Parameters

    + dealerId (required, number, `356`) ... Dealer ID of the gap claims to retrieve. 
    + status (optional, string, `P|B|A`) ... Claim status IDs of the gap claims to retrive, separated by pipe.
    + addendumNum (optional, string `2245568`) ... Addendum number to search for.
    + claimNum (optional, string `6030834`) ... Claim number to search for.

#### Retrieve a Dealer Gap Claim collection [GET]
+ Request (application/json)

    + Header
    
            Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l
            Current-User: jdoe

+ Response 200 (application/json)

    + Attributes (claims)
    
    + Body
    
            {
                "claims": [
                  {
                    "lastActivityDate": {
                      "Day": 9,
                      "Month": 5,
                      "Year": 2017
                    },
                    "status": "C",
                    "dateClaimOpened": {
                      "Day": 26,
                      "Month": 7,
                      "Year": 2017
                    },
                    "dateLoss": {
                      "Day": 19,
                      "Month": 9,
                      "Year": 2016
                    },
                    "customer": "ENTALITY",
                    "addendumNum": 2450147,
                    "claimNum": 6030834
                  },
                  {
                    "lastActivityDate": {
                      "Day": 5,
                      "Month": 11,
                      "Year": 2017
                    },
                    "status": "D",
                    "dateClaimOpened": {
                      "Day": 21,
                      "Month": 6,
                      "Year": 2016
                    },
                    "dateLoss": {
                      "Day": 21,
                      "Month": 6,
                      "Year": 2016
                    },
                    "customer": "DRAGBOT",
                    "addendumNum": 2187357,
                    "claimNum": 6013696
                  },
                  {
                    "lastActivityDate": {
                      "Day": 28,
                      "Month": 11,
                      "Year": 2016
                    },
                    "status": "D",
                    "dateClaimOpened": {
                      "Day": 19,
                      "Month": 7,
                      "Year": 2017
                    },
                    "dateLoss": {
                      "Day": 14,
                      "Month": 8,
                      "Year": 2017
                    },
                    "customer": "SURETECH",
                    "addendumNum": 2778516,
                    "claimNum": 6883531
                  },
                  {
                    "lastActivityDate": {
                      "Day": 12,
                      "Month": 4,
                      "Year": 2017
                    },
                    "status": "C",
                    "dateClaimOpened": {
                      "Day": 10,
                      "Month": 5,
                      "Year": 2016
                    },
                    "dateLoss": {
                      "Day": 16,
                      "Month": 6,
                      "Year": 2016
                    },
                    "customer": "MINGA",
                    "addendumNum": 2405085,
                    "claimNum": 6832004
                  },
                  {
                    "lastActivityDate": {
                      "Day": 4,
                      "Month": 2,
                      "Year": 2016
                    },
                    "status": "V",
                    "dateClaimOpened": {
                      "Day": 16,
                      "Month": 3,
                      "Year": 2016
                    },
                    "dateLoss": {
                      "Day": 29,
                      "Month": 1,
                      "Year": 2016
                    },
                    "customer": "COMTEXT",
                    "addendumNum": 2077547,
                    "claimNum": 6301865
                  },
                  {
                    "lastActivityDate": {
                      "Day": 27,
                      "Month": 1,
                      "Year": 2017
                    },
                    "status": "A",
                    "dateClaimOpened": {
                      "Day": 25,
                      "Month": 12,
                      "Year": 2017
                    },
                    "dateLoss": {
                      "Day": 2,
                      "Month": 5,
                      "Year": 2016
                    },
                    "customer": "ISOTRONIC",
                    "addendumNum": 2887948,
                    "claimNum": 6407154
                  },
                  {
                    "lastActivityDate": {
                      "Day": 28,
                      "Month": 8,
                      "Year": 2016
                    },
                    "status": "C",
                    "dateClaimOpened": {
                      "Day": 11,
                      "Month": 11,
                      "Year": 2016
                    },
                    "dateLoss": {
                      "Day": 12,
                      "Month": 5,
                      "Year": 2016
                    },
                    "customer": "ZILLANET",
                    "addendumNum": 2424617,
                    "claimNum": 6850285
                  },
                  {
                    "lastActivityDate": {
                      "Day": 18,
                      "Month": 10,
                      "Year": 2017
                    },
                    "status": "D",
                    "dateClaimOpened": {
                      "Day": 5,
                      "Month": 8,
                      "Year": 2017
                    },
                    "dateLoss": {
                      "Day": 26,
                      "Month": 4,
                      "Year": 2016
                    },
                    "customer": "SPEEDBOLT",
                    "addendumNum": 2053599,
                    "claimNum": 6644552
                  },
                  {
                    "lastActivityDate": {
                      "Day": 18,
                      "Month": 9,
                      "Year": 2016
                    },
                    "status": "C",
                    "dateClaimOpened": {
                      "Day": 12,
                      "Month": 3,
                      "Year": 2017
                    },
                    "dateLoss": {
                      "Day": 18,
                      "Month": 7,
                      "Year": 2017
                    },
                    "customer": "RECRISYS",
                    "addendumNum": 2581290,
                    "claimNum": 6437232
                  },
                  {
                    "lastActivityDate": {
                      "Day": 12,
                      "Month": 7,
                      "Year": 2016
                    },
                    "status": "V",
                    "dateClaimOpened": {
                      "Day": 21,
                      "Month": 11,
                      "Year": 2017
                    },
                    "dateLoss": {
                      "Day": 21,
                      "Month": 5,
                      "Year": 2016
                    },
                    "customer": "ZILLATIDE",
                    "addendumNum": 2724027,
                    "claimNum": 6786166
                  }
              ]
            }

+ Response 500 (application/json)

    + Attributes (error)
    
+ Response 403 (application/json)

    + Attributes (error)
    
    + Body
    
            {
                "message": "The user is not authorized"
            }
    

### Gap Claim [/claims/{claimId}]
Return a single gap claim object with all the associated documents.

The main use for this service is on the page where we have to show the details of a specific gap claim.

+ Parameters

    + claimId (required, number, `6359654`) ... Integer `claimId` of the gap claim to perform action with. Has example value.

#### Retrieve a Gap Claim [GET]
+ Request (application/json)

    + Header
    
            Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l
            Current-User: jdoe
            
+ Response 200 (application/json)

    + Attributes (claim)

    + Body
    
            {
                "claimNum": "6359654", 
                "addendumNum": "2245568",
                "customer": "Smith",
                "dateLoss": {"Year": 2016, "Month": 1, "Day": 10},
                "dateClaimOpened": {"Year": 2016, "Month": 1, "Day": 15},
                "status": "P",
                "lastActivityDate": {"Year": 2016, "Month": 1, "Day": 15},
                "requiredDocs": [
                    {"id": 1, "name": "Police Report", "verifiedDate": {"Year": 2016, "Month": 1, "Day": 15}},
                    {"id": 2, "name": "Lender Payment History", "verifiedDate": {"Year": 2016, "Month": 1, "Day": 16}},
                    {"id": 3, "name": "Finance Contract", "verifiedDate": {"Year": 2016, "Month": 1, "Day": 17}}
                ],
                "additionalDocs": [
                    {"id": 4, "name": "Sales/Leasing Aggrement", "verifiedDate": {"Year": 2016, "Month": 1, "Day": 15}},
                    {"id": 5, "name": "Factory Invoice", "verifiedDate": {"Year": 2016, "Month": 1, "Day": 16}},
                    {"id": 6, "name": "Other Credits", "verifiedDate": {"Year": 2016, "Month": 1, "Day": 17}}
                ]
            }

+ Response 500 (application/json)

    + Attributes (error)


### Gap Claim Status Types [/claims/status-types]
Return a collection of the different gap claim status types.

The main use for this service to fill the legend on the page where we have
to list all the gap claims for a dealer, as well as to populate the search by status field.


#### Retrieve the Gap Claim Status collection [GET]
+ Request (application/json)

    + Header
    
            Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l
            Current-User: jdoe

+ Response 200 (application/json)

    + Attributes (claimStatuses)

    + Body
    
            [
                {"id": "P", "name": "Pending Documents", "description": "Documents still needed in order to process the claim"},
                {"id": "O", "name": "In Process", "description": "All documents received. Claim under Review"},
                {"id": "B", "name": "In Process", "description": "All documents received. Claim under Review"},
                {"id": "A", "name": "Approved", "description": "Claim has been processed and approved"}
            ]

+ Response 500 (application/json)

    + Attributes (error)
    

# Data Structures

## date (object)
+ year (number) - Year fo the date
+ month (number) - Month of the date
+ day (number) - Day of the date

## profile (object)
+ id: 365 (number, required) - Profile Id
+ role: agent (string, required) - Profile role
+ name: Motor Inn Company (string, required) - Profile name

## profiles (object)
+ profiles (array[profile]) - Array of profiles

## document (object)
+ id (number) - Document ID
+ name (string) - Document name
+ verifiedDate (date) - Document verification date

## documents (object)
+ documents (array[document]) - Array of documents

## claimStatus (object)
+ id: P (string) - Document ID
+ name: Pending Documents (string) - Document name
+ description: Documents still needed in order to process the claim (string) - Document description

## claimStatuses (object)
+ claimStatuses (array[claimStatus]) - Array of claim statuses

## claim (object)
+ claimNum: 6359654 (string) - Claim number
+ addendumNum: 2245568 (string) - Addendum number
+ customer: Smith (string) - Customer
+ dateLoss (date) - Date of loss
+ dateClaimOpened (date) - Date claim opened
+ status: P (string) - Claim status
+ statusName: Pending Documents (string) - Claim status name
+ statusDesc: Documents still needed in order to process the claim (string) - Claim status description
+ lastActivityDate (date) - Last activity date
+ requiredDocs (array[document]) - Required documents
+ additionalDocs (array[document]) - Additional documents

## claims (object)
+ claims (array[claim]) - Array of claims

## error (object)
+ message: Error message (string, required) - Error message to show to the final user